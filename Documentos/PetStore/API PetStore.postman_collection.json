{
	"info": {
		"_postman_id": "bf5b4242-c152-4f73-a2df-9da4d41e1288",
		"name": "API PetStore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46950917",
		"_collection_link": "https://guilhermehepp-9526515.postman.co/workspace/An%25C3%25A1lise-de-APIs~df1956f3-9982-4122-bd00-748e1141a63b/collection/46950917-bf5b4242-c152-4f73-a2df-9da4d41e1288?action=share&source=collection_link&creator=46950917"
	},
	"item": [
		{
			"name": "Pets",
			"item": [
				{
					"name": "GET pet by Status",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/pet/findByStatus?status=available",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "available"
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET pet by Tags",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/pet/findByTags?tags=tag1",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"pet",
								"findByTags"
							],
							"query": [
								{
									"key": "tags",
									"value": "tag1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET pet by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/pet/1",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"pet",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Tempo de resposta é menor que 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Header Content-Type está presente e é application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});\r",
									"\r",
									"const responseBody = pm.response.json();\r",
									"\r",
									"pm.test(\"O corpo da resposta contém um 'id' de pet e é um número\", function () {\r",
									"    pm.expect(responseBody.id).to.be.a('number');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 404,\r\n  \"name\": \"undefined pet\",\r\n  \"category\": {\r\n    \"id\": 265112125,\r\n    \"name\": \"aa\"\r\n  },\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 5448448544,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/pet",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Uploads image of the pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Tempo de resposta é menor que 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Header Content-Type está presente e é application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/octet-stream",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "QEboOksUP/petStore-API-MapaMental.png"
							}
						},
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/pet/404/uploadImage",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"pet",
								"404",
								"uploadImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updates a pet with form",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Tempo de resposta é menor que 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Header Content-Type está presente e é application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/pet/404?name=undefff&status=avaiables",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"pet",
								"404"
							],
							"query": [
								{
									"key": "name",
									"value": "undefff"
								},
								{
									"key": "status",
									"value": "avaiables"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Tempo de resposta é menor que 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Header Content-Type está presente e é application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 404,\r\n  \"name\": \"undefined dog 404\",\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"Dogs\"\r\n  },\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/pet",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE pet",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/pet/3",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"pet",
								"3"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Store",
			"item": [
				{
					"name": "Consultar Inventário",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/store/inventory",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"store",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Criar Pedido",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 1,\n  \"petId\": 198,\n  \"quantity\": 1,\n  \"shipDate\": \"2025-09-01T14:00:00.000Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/store/order",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Criar Pedido - Dados Inválidos",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\":2,\n  \"petId\": 198,\n  \"quantity\": -1, \n  \"shipDate\": \"2025-09-01T14:00:00.000Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/store/order",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultar Pedido por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/store/order/1",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"store",
								"order",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar Pedido por ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/store/order/115",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"store",
								"order",
								"115"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Endpoint de login retorna a mensagem de sessão esperada\", function () {\r",
									"    // 1. Verifica se o status code é 200 (como sempre será)\r",
									"    pm.response.to.have.status(200);\r",
									"    \r",
									"    // 2. Verifica se o corpo da resposta contém o texto \"Logged in user session:\"\r",
									"    pm.expect(pm.response.text()).to.include(\"Logged in user session:\");\r",
									"});\r",
									"\r",
									"pm.test(\"A resposta de login é um texto (string)\", function () {\r",
									"    // Garante que o tipo da resposta é uma string, como esperado\r",
									"    pm.expect(pm.response.text()).to.be.a('string');\r",
									"});\r",
									"\r",
									"pm.test(\"O tempo de execução ultrapassa os 200ms\", function () {\r",
									"    // Verifica se o tempo de execução da solicitação é maior que 200ms\r",
									"    pm.expect(pm.response.responseTime).to.be.above(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logout retorna status 200 e mensagem de sucesso\", function () {\r",
									"    // 1. Verifica se o status code da resposta é 200 OK\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"O corpo da resposta do Logout tem menos de 30 bytes\", function () {\r",
									"    // 2. Verifica se o tamanho da resposta é maior que 300 bytes\r",
									"    pm.expect(pm.response.text().length).to.be.below(30);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "createWithList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Criação de usuários com lista retorna status 200 OK\", function () {\r",
									"    // Verifica se a resposta foi bem-sucedida\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"A resposta da criação é um JSON válido\", function () {\r",
									"    // Verifica se a API retornou um JSON como resposta\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Recebe um erro 500 do servidor\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"pm.test(\"A resposta de erro contém um ID de log\", function () {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.message).to.include(\"ID:\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"id\": 8877001,\r\n    \"username\": \"theUser\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"James\",\r\n    \"email\": \"john@email.com\",\r\n    \"password\": \"12345\",\r\n    \"phone\": \"12345\",\r\n    \"userStatus\": 1\r\n  },\r\n  {\r\n    \"id\": 8877002,\r\n    \"username\": \"anotherUser\",\r\n    \"firstName\": \"Jane\",\r\n    \"lastName\": \"Doe\",\r\n    \"email\": \"jane@email.com\",\r\n    \"password\": \"abcde\",\r\n    \"phone\": \"54321\",\r\n    \"userStatus\": 1\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user/createWithList",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"createWithList"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status da resposta é 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Header Content-Type está presente e é application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"Resposta tem a estrutura correta\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.all.keys('code', 'message', 'type');\r",
									"});\r",
									"\r",
									"pm.test(\"Falha com dados inválidos\", function () {\r",
									"    pm.response.to.have.status(500); \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 14,\r\n  \"username\": \"andressa22\",\r\n  \"firstName\": \"Andressa\",\r\n  \"lastName\": \"Von Ahnt\",\r\n  \"email\": \"andressa@email.com\",\r\n  \"password\": \"12345\",\r\n  \"phone\": \"867-234-4535\",\r\n  \"userStatus\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/user",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user by user name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status da resposta é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Header Content-Type está presente e é application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});\r",
									"\r",
									"pm.test(\"O email tem um formato válido\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData.email).to.include('@').and.include('.com');\r",
									"});\r",
									"\r",
									"pm.test(\"Usuário não encontrado\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/user/user1",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"user",
								"user1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an existent user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status da resposta é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Header Content-Type está presente e é application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"username\": \"user1\",\r\n    \"firstName\": \"User Atualizado\",\r\n    \"lastName\": \"last name 1\",\r\n    \"email\": \"email1@test.com\",\r\n    \"password\": \"XXXXXXXXXXX\",\r\n    \"phone\": \"123-456-7890\",\r\n    \"userStatus\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/user/user1",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"user",
								"user1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status da resposta é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Header Content-Type está presente e é application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://petstore3.swagger.io/api/v3/user/user1",
							"protocol": "https",
							"host": [
								"petstore3",
								"swagger",
								"io"
							],
							"path": [
								"api",
								"v3",
								"user",
								"user1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "",
			"type": "string"
		}
	]
}